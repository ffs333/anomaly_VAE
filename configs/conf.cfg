{
    data:
    {
        train_data = PATH_TO_TRAIN_DATA (STR)
        eval_data = PATH_TO_EVAL_DATA (STR)
        data_folder = PATH_TO_FOLDER_WITH_WAV_FILES (STR)
        data_output_folder = PATH_TO_SAVE_DATA (STR)
        step = AUDIO_STEP_SECONDS (INT)
        sec_len = SECONDS_LENGTH (INT)
        channel = ACTUAL_DATA_CHANNEL (INT)
        split_train_test = SPLIT_SIZE (FLOAT)
    }
    model:
    {
        model_type = MODEL_TYPE (STR)
        batch_size = BATCH_SIZE (INT)
        input_size = INPUT_SIZE (LIST)
        dropout_rate = DROPOUT_RATE (FLOAT)
    }
    train:
    {
        device = NAME_OF_DEVICE (STR)
        learning_rate = LEARNING_RATE (FLOAT)
        num_epochs = NUMBER_OF_EPOCHS (INT)

        num_classes = NUM_OF_CLASSIFICATION_CLASSES(INT)
        transfer = ENABLE_TRANSFER_LEARNING (BOOL)
        checkpoint = PATH_TO_MODEL_CHECKPOINT (STR)

        optimizer = OPTIMIZER_TYPE(STR)
        weight_decay = DECAY_VALUE(FLOAT)

        output_config = PATH_TO_DUMP_CONFIG_FROM_TRAIN_LOOP (STR)
        output_check = PATH_TO_SAVE_MODEL_CHECKPOINT (STR)
        output_spec = PATH_TO_SAVE_SPECTROGRAM (STR)
        eval_step_epochs = FREQUENCY_OF_EVALUATION (INT)
        mfcc_step_epochs = FREQUENCY_OF_PAINTING_MFCC (INT)
        mel_step_epochs = FREQUENCY_OF_PAINTING_MEL (INT)
        save_epoch = FREQUENCY_OF_SAVING_MODEL (INT)
    }
}